     1                                  section .data
     2 00000000 01000000                sig     dd 1
     3                                  
     4                                  section .bss
     5                                  
     6                                  section .text
     7                                  global  ft__atoi_base
     8                                  
     9                                  extern ft__strlen
    10                                  
    11                                  ft__atoi_base:
    12                                  	;    Prolog
    13 00000000 55                      	push rbp
    14 00000001 4889E5                  	mov  rbp, rsp
    15                                  
    16 00000004 57                      	push rdi
    17 00000005 56                      	push rsi
    18                                  
    19 00000006 4889F7                  	mov  rdi, rsi
    20                                  	check_base_leng: ; check base leng
    21 00000009 E8(00000000)            	call ft__strlen
    22 0000000E 4883F802                	cmp  rax, 2
    23 00000012 7C78                    	jl   end_fail
    24                                  
    25 00000014 4889F7                  	mov rdi, rsi
    26                                  	check_chars_in_base: ; check incorrect chars in base
    27 00000017 4831C0                  	xor rax, rax
    28 0000001A 8A07                    	mov al, [rdi]
    29 0000001C 3C20                    	cmp al, 32; comp space
    30 0000001E 746C                    	je  end_fail
    31 00000020 3C2B                    	cmp al, 43; comp +
    32 00000022 7468                    	je  end_fail
    33 00000024 3C2D                    	cmp al, 45; comp -
    34 00000026 7464                    	je  end_fail
    35 00000028 48FFC7                  	inc rdi
    36 0000002B 3C00                    	cmp al, 0; end of string
    37 0000002D 75E8                    	jne check_chars_in_base
    38                                  
    39 0000002F 4889F7                  	mov rdi, rsi
    40                                  	check_repeated_char_in_base: ; check repeated char in base
    41 00000032 488B07                  	mov rax, [rdi]
    42 00000035 3C00                    	cmp al, 0
    43 00000037 7417                    	je  calc_number
    44 00000039 48FFC7                  	inc rdi
    45 0000003C 4831C9                  	xor rcx, rcx
    46                                  
    47                                  	check_chars: ; check chars in al - bl
    48 0000003F 8A1C0F                  	mov bl, [rdi + rcx]
    49 00000042 80FB00                  	cmp bl, 0
    50 00000045 74EB                    	je  check_repeated_char_in_base
    51 00000047 38D8                    	cmp al, bl
    52 00000049 7441                    	je  end_fail
    53 0000004B 48FFC1                  	inc rcx
    54 0000004E EBEF                    	jmp check_chars
    55                                  
    56                                  calc_number:
    57 00000050 4831C9                  	xor rcx, rcx
    58 00000053 5E                      	pop rsi; restore to original value rsi "base"
    59 00000054 5F                      	pop rdi; restore rdi original value rdi "str"
    60 00000055 BB01000000              	mov rbx, 1
    61                                  
    62                                  mul_sig:
    63 0000005A 4883FBFF                	cmp  rbx, -1
    64 0000005E 7404                    	je   increment
    65 00000060 486BDBFF                	imul rbx, rbx, -1
    66                                  
    67                                  increment:
    68 00000064 48FFC1                  	inc rcx
    69                                  
    70                                  loop:
    71 00000067 8A040F                  	mov al, [rdi + rcx]
    72 0000006A 3C20                    	cmp al, ' '
    73 0000006C 74F6                    	je  increment
    74 0000006E 3C5C                    	cmp al, '\t'
    74          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    75 00000070 74F2                    	je  increment
    76 00000072 3C5C                    	cmp al, '\r'
    76          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    77 00000074 74EE                    	je  increment
    78 00000076 3C5C                    	cmp al, '\n'
    78          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    79 00000078 74EA                    	je  increment
    80 0000007A 3C5C                    	cmp al, '\v'
    80          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    81 0000007C 74E6                    	je  increment
    82 0000007E 3C5C                    	cmp al, '\f'
    82          ******************       warning: byte data exceeds bounds [-w+number-overflow]
    83 00000080 74E2                    	je  increment
    84 00000082 3C00                    	cmp al, 0
    85 00000084 7410                    	je  return
    86 00000086 3C2D                    	cmp al, byte '-'
    87 00000088 74D0                    	je  mul_sig
    88 0000008A EB0A                    	jmp return
    89                                  
    90                                  end_fail:
    91 0000008C 5E                      	pop rsi
    92 0000008D 5F                      	pop rdi
    93 0000008E 4831C0                  	xor rax, rax
    94                                  	;   Epilog
    95 00000091 4889EC                  	mov rsp, rbp
    96 00000094 5D                      	pop rbp
    97                                  
    98 00000095 C3                      	ret
    99                                  
   100                                  return:
   101                                  	;   Epilog
   102 00000096 4889EC                  	mov rsp, rbp
   103 00000099 5D                      	pop rbp
   104                                  
   105 0000009A 4889D8                  	mov rax, rbx; to test
   106 0000009D C3                      	ret
